{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python + Firestore for Real World Projects For full documentation visit mkdocs.org . About Firestore Firestore is a Python Object-Document/Object-Collections Mapper for working with Google Cloud Firestore \u00a9 - the Flexible, Extremely Scalable, realtime NoSQL database by Google. You can find some documentation by visiting Google Firestore Upcoming Features Offline Storage - For development when offline Realtime Sync - Sync offline changes to Google Cloud Firestore See All You Can Do Via The Tutorials","title":"Home"},{"location":"#python-firestore-for-real-world-projects","text":"For full documentation visit mkdocs.org .","title":"Python + Firestore for Real World Projects"},{"location":"#about-firestore","text":"Firestore is a Python Object-Document/Object-Collections Mapper for working with Google Cloud Firestore \u00a9 - the Flexible, Extremely Scalable, realtime NoSQL database by Google. You can find some documentation by visiting Google Firestore","title":"About Firestore"},{"location":"#upcoming-features","text":"Offline Storage - For development when offline Realtime Sync - Sync offline changes to Google Cloud Firestore","title":"Upcoming Features"},{"location":"#see-all-you-can-do-via-the-tutorials","text":"","title":"See All You Can Do Via The Tutorials"},{"location":"api/","text":"Datatypes Datatypes are the fundamental units of storage of your ORM.","title":"Datatypes"},{"location":"api/#datatypes","text":"Datatypes are the fundamental units of storage of your ORM.","title":"Datatypes"},{"location":"changelog/","text":"Stable vs Unstable Versions Do not install versions marked as Unstable as they are not suitable for production environments in any capacity. Stable Versions Stable versions start from V0.0.9 V0.0.9 V0.0.8 BREAKING CHANGE : Renamed Collections to Documents and introduced a new Collection Datatype Unstable Versions V0.0.7 - Dev (Unstable) V0.0.6 - Dev (Unstable) V0.0.5 - Dev (Unstable) V0.0.4 - Dev (Unstable) V0.0.1 - Dev (Unstable)","title":"Changelog"},{"location":"changelog/#stable-vs-unstable-versions","text":"Do not install versions marked as Unstable as they are not suitable for production environments in any capacity.","title":"Stable vs Unstable Versions"},{"location":"changelog/#stable-versions","text":"Stable versions start from V0.0.9","title":"Stable Versions"},{"location":"changelog/#v009","text":"","title":"V0.0.9"},{"location":"changelog/#v008","text":"BREAKING CHANGE : Renamed Collections to Documents and introduced a new Collection Datatype","title":"V0.0.8"},{"location":"changelog/#unstable-versions","text":"","title":"Unstable Versions"},{"location":"changelog/#v007-dev-unstable","text":"","title":"V0.0.7 - Dev (Unstable)"},{"location":"changelog/#v006-dev-unstable","text":"","title":"V0.0.6 - Dev (Unstable)"},{"location":"changelog/#v005-dev-unstable","text":"","title":"V0.0.5 - Dev (Unstable)"},{"location":"changelog/#v004-dev-unstable","text":"","title":"V0.0.4 - Dev (Unstable)"},{"location":"changelog/#v001-dev-unstable","text":"","title":"V0.0.1 - Dev (Unstable)"},{"location":"tutorial/","text":"In this tutorial we will attempt to introduce you to all the functionality made available by Firestore Python for building PWAs, APIs, or any other Python application of your choosing. In the traditional nature of such tutorials we will be creating a Blog Application called Fireblog . Fireblog is centered around users , their posts , comments on those posts and files . Getting Started First ensure you have Installed Firestore and you have a copy of your Google Firestore JSON Certificate in an accessible location -- i.e. a location from where your code can read the file in. $ pip install firestore Once you have ensured firestore is installed and the certificate file is accessible you can start using firestore directly. Firestore Concepts Firestore is a NoSQL database and as such operates under a different set of rules from Relational and Graph databases. Covering database types is outside the scope of this tutorial -- however, even amongst NoSQL databases e.g. MongoDB , ArangoDB , CouchDB etc. Firestore is a little bit different in it's core concepts. For example looking at the image below it is clear that Firestore has a different architectural model from MongoDB (One of the Popular NoSQL Database Engines).","title":"Tutorials"},{"location":"tutorial/#getting-started","text":"First ensure you have Installed Firestore and you have a copy of your Google Firestore JSON Certificate in an accessible location -- i.e. a location from where your code can read the file in. $ pip install firestore Once you have ensured firestore is installed and the certificate file is accessible you can start using firestore directly.","title":"Getting Started"},{"location":"tutorial/#firestore-concepts","text":"Firestore is a NoSQL database and as such operates under a different set of rules from Relational and Graph databases. Covering database types is outside the scope of this tutorial -- however, even amongst NoSQL databases e.g. MongoDB , ArangoDB , CouchDB etc. Firestore is a little bit different in it's core concepts. For example looking at the image below it is clear that Firestore has a different architectural model from MongoDB (One of the Popular NoSQL Database Engines).","title":"Firestore Concepts"},{"location":"guide/","text":"","title":"User Guide"},{"location":"guide/installation/","text":"","title":"Installation"}]}